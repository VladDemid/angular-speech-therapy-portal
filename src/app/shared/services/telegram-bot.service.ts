import { Injectable, OnInit } from '@angular/core';
import { environment, telegramConfig } from 'src/environments/environment';
import { ClientFeedbackObj, SpecialistFeedbackObj } from '../interfaces';

@Injectable({
  providedIn: 'root'
})
export class TelegramBotService implements OnInit{

  testEmails = ["mr.zgot@yandex.ru", "vlatidos@gmail.com"]

  constructor() { }

  ngOnInit() {

  }
  
  sendMessage() {
    const message = "message from web"
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }

  telegramNotifCreateMeeting() {
    const message = "message from web #testDebug"
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${telegramConfig.logobotChatId}&text=${message}`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }

  telegramNotifConfirmMeeting(eventLesson) {
    const message = `–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç üë®‚Äç‚öïÔ∏è*${eventLesson.doctorName}* (\`${eventLesson.doctorId}\`):%0A ‚úÖ*–ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª* –∑–∞–Ω—è—Ç–∏–µ :%0A –Ω–∞ üìÖ${eventLesson.date.day}.${eventLesson.date.month}.${eventLesson.date.year}:%0A —Å üó£*${eventLesson.patientName}* (\`${eventLesson.patientId}\`)`
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${telegramConfig.logobotChatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }


  sendNewLessonMessage(eventLesson) {
  
    const message = `üó£*${eventLesson.patientName}* (\`${eventLesson.patientId}\`):%0A *–∑–∞–ø–∏—Å–∞–ª—Å—è* –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ –∫ üë®‚Äç‚öïÔ∏è*${eventLesson.doctorName}* (\`${eventLesson.doctorId}\`):%0A —Å –ø—Ä–æ–±–ª–µ–º–æ–π "${eventLesson.problemDescription}":%0A –Ω–∞ üìÖ *${eventLesson.date.day}.${eventLesson.date.month}.${eventLesson.date.year}*`
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }

  checkTestMessage(values) {
    return this.testEmails.includes(values.email) ? "--‚öôÔ∏è–≠—Ç–æ –¢–ï–°–¢–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µüóëÔ∏è--" : ""
  }

  sendClientFeedback(values: ClientFeedbackObj) {
    console.log(values)
    const isTestEmail = this.checkTestMessage(values)
    const message = `${isTestEmail}%0A  *–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ö–õ–ò–ï–ù–¢ (–¥–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)* %0A üßë- ${values.parentName}:%0A üë∂- ${values.childName} (${values.childDate}) :%0A ‚úâÔ∏è- ${values.email} %0A üìû- ${values.phone} %0A üí¨- ${values.comment} %0A ${isTestEmail}`
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }
  
  sendSpecialistFeedback(values: SpecialistFeedbackObj) {
    console.log(values)
    const isTestEmail = this.checkTestMessage(values)
    const message = `${isTestEmail} %0A *–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –°–ü–ï–¶–ò–ê–õ–ò–°–¢*:%0A üßë‚Äç‚öïÔ∏è- ${values.name} %0A - ${values.specialization} %0A ‚úâÔ∏è- ${values.email} %0A üìû- ${values.phone} %0A üí¨- ${values.comment} %0A ${isTestEmail}`
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
    return 
  }

}
