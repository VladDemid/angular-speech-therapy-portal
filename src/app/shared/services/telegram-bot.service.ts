import { Injectable, OnInit } from '@angular/core';
import { environment, telegramConfig } from 'src/environments/environment';
import { ClientFeedbackObj, SpecialistFeedbackObj } from '../interfaces';

@Injectable({
  providedIn: 'root'
})
export class TelegramBotService implements OnInit{

  constructor() { }

  ngOnInit() {

  }
  
  sendMessage() {
    const message = "message from web"
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }

  telegramNotifCreateMeeting() {
    const message = "message from web #testDebug"
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${telegramConfig.logobotChatId}&text=${message}`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }

  telegramNotifConfirmMeeting(eventLesson) {
    const message = `–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç üë®‚Äç‚öïÔ∏è*${eventLesson.doctorName}* (\`${eventLesson.doctorId}\`):%0A ‚úÖ*–ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª* –∑–∞–Ω—è—Ç–∏–µ :%0A –Ω–∞ üìÖ${eventLesson.date.day}.${eventLesson.date.month}.${eventLesson.date.year}:%0A —Å üó£*${eventLesson.patientName}* (\`${eventLesson.patientId}\`)`
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${telegramConfig.logobotChatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }


  sendNewLessonMessage(eventLesson) {
  
    const message = `üó£*${eventLesson.patientName}* (\`${eventLesson.patientId}\`):%0A *–∑–∞–ø–∏—Å–∞–ª—Å—è* –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ –∫ üë®‚Äç‚öïÔ∏è*${eventLesson.doctorName}* (\`${eventLesson.doctorId}\`):%0A —Å –ø—Ä–æ–±–ª–µ–º–æ–π "${eventLesson.problemDescription}":%0A –Ω–∞ üìÖ *${eventLesson.date.day}.${eventLesson.date.month}.${eventLesson.date.year}*`
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }

  sendClientFeedback(values: ClientFeedbackObj) {
    console.log(values)

    const message = `*—Ñ–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –ö–õ–ò–ï–ù–¢*:%0A - ${values.name} ${values.surname} %0A - ${values.email} %0A - ${values.phone} %0A ${values.question}`
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
  }

  sendSpecialistFeedback(values: SpecialistFeedbackObj) {
    console.log(values)

    const message = `*—Ñ–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –°–ü–ï–¶–ò–ê–õ–ò–°–¢*:%0A - ${values.name} %0A ${values.specialisation} %0A - ${values.email} %0A - ${values.phone} %0A ${values.description}`
    const chatId = telegramConfig.logobotChatId
    let url = `https://api.telegram.org/bot${telegramConfig.botToken}/sendMessage?chat_id=${chatId}&text=${message}&parse_mode=markdown`
    let xhttp = new XMLHttpRequest()
    xhttp.open("GET", url, true)
    xhttp.send()
    return 
  }

}
